// <auto-generated />
using System;
using BestPrinterBilling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BestPrinterBilling.Migrations
{
    [DbContext(typeof(bestprinterbillingdbContext))]
    partial class bestprinterbillingdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BestPrinterBilling.Models.TblMachine", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnName("MACHINE_ID")
                        .HasColumnType("int");

                    b.Property<string>("CollectionMethod")
                        .IsRequired()
                        .HasColumnName("COLLECTION_METHOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContractEnd")
                        .HasColumnName("CONTRACT_END")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("ContractStart")
                        .HasColumnName("CONTRACT_START")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CurInvoiceId")
                        .IsRequired()
                        .HasColumnName("CUR_INVOICE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurInvoiceTotal")
                        .HasColumnName("CUR_INVOICE_TOTAL")
                        .HasColumnType("float");

                    b.Property<int>("CurRdsBw")
                        .HasColumnName("CUR_RDS_BW")
                        .HasColumnType("int");

                    b.Property<int>("CurRdsClr")
                        .HasColumnName("CUR_RDS_CLR")
                        .HasColumnType("int");

                    b.Property<int>("CurRdsClrlrg")
                        .HasColumnName("CUR_RDS_CLRLRG")
                        .HasColumnType("int");

                    b.Property<string>("Devicemodel")
                        .IsRequired()
                        .HasColumnName("DEVICEMODEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('TRUE')");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("LOCATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinCharge")
                        .IsRequired()
                        .HasColumnName("MIN_CHARGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevInvoiceId")
                        .IsRequired()
                        .HasColumnName("PREV_INVOICE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrevInvoiceTotal")
                        .HasColumnName("PREV_INVOICE_TOTAL")
                        .HasColumnType("float");

                    b.Property<int>("PrevRdsBw")
                        .HasColumnName("PREV_RDS_BW")
                        .HasColumnType("int");

                    b.Property<int>("PrevRdsClr")
                        .HasColumnName("PREV_RDS_CLR")
                        .HasColumnType("int");

                    b.Property<int>("PrevRdsClrlrg")
                        .HasColumnName("PREV_RDS_CLRLRG")
                        .HasColumnType("int");

                    b.Property<double>("PriceBw")
                        .HasColumnName("PRICE_BW")
                        .HasColumnType("float");

                    b.Property<double>("PriceClr")
                        .HasColumnName("PRICE_CLR")
                        .HasColumnType("float");

                    b.Property<double>("PriceClrlrg")
                        .HasColumnName("PRICE_CLRLRG")
                        .HasColumnType("float");

                    b.Property<int>("QtyBw")
                        .HasColumnName("QTY_BW")
                        .HasColumnType("int");

                    b.Property<int>("QtyClr")
                        .HasColumnName("QTY_CLR")
                        .HasColumnType("int");

                    b.Property<int>("QtyClrlrg")
                        .HasColumnName("QTY_CLRLRG")
                        .HasColumnType("int");

                    b.Property<int>("Serialnum")
                        .HasColumnName("SERIALNUM")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("MachineId")
                        .HasName("PK__tblMACHI__DE783B9974160401");

                    b.ToTable("tblMACHINE");
                });

            modelBuilder.Entity("BestPrinterBilling.Models.TblUsers", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnName("COMPANY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnName("CONTACT NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Isadmin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ISADMIN")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('FALSE')");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__tblUSERS__F3BEEBFF9AF1F5C3");

                    b.ToTable("tblUSERS");
                });
#pragma warning restore 612, 618
        }
    }
}
